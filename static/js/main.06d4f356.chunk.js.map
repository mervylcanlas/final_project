{"version":3,"sources":["Components/Header/Search.js","Components/Header/Header.js","Components/SearchResults/SearchResult.js","Components/SearchResults/SearchResults.js","Components/Anime/ResultInfo.js","Components/Home/arrow.png","Components/Home/Home.js","Components/About/About.js","App.js","reportWebVitals.js","index.js"],"names":["Search","onSearch","useState","text","setText","onSubmit","e","preventDefault","alert","className","type","placeholder","value","onChange","target","Header","onHome","onAbout","style","position","onClick","SearchResult","result","getDetail","mal_id","id","src","image_url","alt","title","synopsis","display","flexDirection","justifyContent","score","rated","SearchResults","results","map","ResultInfo","episodes","status","aired","from","slice","to","premiered","broadcast","producers","producer","href","url","rel","name","licensors","licensor","studios","studio","source","genres","genre","duration","rating","title_english","title_japanese","related","Adaptation","anime","Sequel","trailer_url","Home","arrow","About","App","setResults","setResult","resultsToggle","setResultsToggle","aboutToggle","setaboutToggle","homeToggle","setHomeToggle","animeToggle","setAnimeToggle","fetchResults","fetchUri","a","fetch","res","json","data","keyword","encodeURI","resultsFromRequest","getResults","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06d4f356.chunk.js","sourcesContent":["import { useState } from \"react\";\r\nimport './Search.css'\r\n\r\nfunction Search({onSearch}) {\r\n\r\n    const [text, setText] = useState('')\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!text) {\r\n            alert('Enter search keyword')\r\n            return\r\n        }\r\n\r\n        onSearch({text})\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = {onSubmit} className = 'add-form'>\r\n            <div className = 'form-control'>\r\n                <input type = 'text' placeholder = \"Search here...\" value = {text} onChange = {(e)=> setText(e.target.value)}/>\r\n            </div>\r\n            <input className = 'btn' type = 'submit' value = 'Go'/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import React from 'react'\r\nimport Search from './Search'\r\nimport './Header.css'\r\n\r\nconst Header = ({onSearch, onHome, onAbout}) => {\r\n    return (\r\n        <div className = 'header'>\r\n            <div style = {{position: 'relative'}}>\r\n                <div className = 'pagetitle' onClick = {onHome}>myAnimepedia</div>\r\n            </div>\r\n            <div style = {{position: 'relative'}}>\r\n                <div className = 'about' onClick = {onAbout}>about</div>\r\n            </div>\r\n            <div>\r\n                <Search onSearch = {onSearch} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import { useState } from \"react\";\r\n\r\nconst SearchResult = ({result, getDetail}) => {\r\n\r\n    const [id] = useState(result.mal_id)\r\n\r\n    const onResultClick = () => {\r\n        getDetail({id})\r\n    }\r\n\r\n    return (\r\n        <div className = 'result' onClick = {onResultClick}>\r\n            <img src = {result.image_url} alt = ''/>\r\n            <div className = 'title'>\r\n                <h3>{result.title}</h3>\r\n                <p>{result.synopsis}</p>\r\n                <div style = {{display: 'flex', flexDirection: 'row', justifyContent: 'space-between'}}>\r\n                    <span>Score: {result.score}</span>\r\n                    <span>Type: {result.type}</span>\r\n                    <span>Rated: {result.rated}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchResult\r\n","import SearchResult from './SearchResult'\r\n\r\nconst SearchResults = ( {results, getDetail} ) => {\r\n    \r\n    return (\r\n        <div className = 'results'>\r\n            {results.map((result) => (\r\n                <SearchResult \r\n                key = {result.mal_id} \r\n                result = {result} \r\n                getDetail = {getDetail}\r\n                />\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchResults","import React from 'react'\r\nimport './ResultInfo.css'\r\n\r\nfunction ResultInfo({result}) {\r\n    return (\r\n        <div className = 'resultInfo' key = {result.mal_id}>\r\n            <div className = 'column_1'>\r\n                <span><img src = {result.image_url} alt=''/></span>\r\n                <div className = 'info'>\r\n                    <span><b>Type: </b>{result.type && result.type}</span>\r\n                    <span><b>Episodes: </b>{result.episodes && result.episodes}</span>\r\n                    <span><b>Status: </b>{result.status && result.status}</span>\r\n                    <span><b>Aired: </b>{result.aired.from && result.aired.from.slice(0,10)} to {result.aired.to && result.aired.to.slice(0,10)}</span>\r\n                    <span><b>Premiered: </b>{result.premiered && result.premiered}</span>\r\n                    <span><b>Broadcast: </b>{result.broadcast && result.broadcast}</span>\r\n                    <span><b>Producers: </b> \r\n                        {result.producers && result.producers.map((producer) => (\r\n                            <a key = {producer.mal_id} href = {producer.url} target = '_blank' rel = 'noreferrer'>{producer.name}  </a>\r\n                        ))}\r\n                    </span>\r\n                    <span><b>Licensors: </b>\r\n                        {result.licensors && result.licensors.map((licensor) => (\r\n                            <a key = {licensor.mal_id} href = {licensor.url} target = '_blank' rel = 'noreferrer'>{licensor.name}  </a>\r\n                        ))}\r\n                    </span>\r\n                    <span><b>Studios: </b> \r\n                        {result.studios && result.studios.map((studio) => (\r\n                            <a key = {studio.mal_id} href = {studio.url} target = '_blank' rel = 'noreferrer'>{studio.name}  </a>\r\n                        ))}\r\n                    </span>\r\n                    <span><b>Source: </b>{result.source}</span>\r\n                    <span><b>Genres: </b> \r\n                        {result.genres && result.genres.map((genre) => (\r\n                            genre.name + \"  \"\r\n                        ))}\r\n                    </span>\r\n                    <span><b>Duration: </b>{result.duration && result.duration}</span>\r\n                    <span><b>Rating: </b>{result.rating && result.rating}</span>\r\n                </div>\r\n            </div>\r\n            <div className = 'column_2'>\r\n                <h1>{result.title}</h1>\r\n                <h3><i>{result.title_english && result.title_english} / {result.title_japanese && result.title_japanese}</i></h3>\r\n                <h3>Synopsis</h3>\r\n                <p>{result.synopsis && result.synopsis}</p>\r\n                <h3>Related Anime</h3>\r\n                <div className = 'adaptation'>\r\n                    <span><b>Adaptation</b></span>\r\n                    <span>{result.related.Adaptation && result.related.Adaptation.map((anime) => <div>{anime.name}</div>)}</span>\r\n                    <span><b>Side Story</b></span>\r\n                    <span>{result.related[`Side story`] && result.related[`Side story`].map((anime) => <div>{anime.name}</div>)}</span>\r\n                    <span><b>Sequel</b></span>\r\n                    <span>{result.related.Sequel && result.related.Sequel.map((anime) => <div>{anime.name}</div>)}</span>\r\n                </div>\r\n                {result.trailer_url &&\r\n                <iframe src = {`${result.trailer_url}`} title = {result.mal_id && result.mal_id} />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ResultInfo\r\n","export default __webpack_public_path__ + \"static/media/arrow.a3323d11.png\";","import React from 'react'\r\nimport './Home.css'\r\nimport arrow from './arrow.png'\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div className = 'home'>\r\n            <span className = 'caption'>Start your own anime journey here</span>\r\n            <img src = {arrow} alt = ''/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport './About.css'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className = 'about_page'>\r\n            <p>Created by Mervyl Canlas in 2021</p>\r\n            <p>Made with the purpose of learning ReactJS and APIs</p>\r\n            <p>This website is using Jikan API</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About\r\n","import { useState } from 'react'\nimport Header from './Components/Header/Header'\nimport SearchResults from './Components/SearchResults/SearchResults'\nimport ResultInfo from './Components/Anime/ResultInfo'\nimport Home from './Components/Home/Home'\nimport About from './Components/About/About'\n\nconst App = () => {\n\n  const [results, setResults] = useState([])\n  const [result, setResult] = useState({})\n  const [resultsToggle, setResultsToggle] = useState(false)\n  const [aboutToggle, setaboutToggle] = useState(false)\n  const [homeToggle, setHomeToggle] = useState(true)\n  const [animeToggle, setAnimeToggle] = useState(false)\n\n  // Search\n  const toSearch = ({text}) => {\n    const keyword = encodeURI(text)\n    const fetchUri = `https://api.jikan.moe/v3/search/anime?q=${keyword}&limit=20`\n    const getResults = async () => {\n      const resultsFromRequest = await fetchResults(fetchUri)\n      setResults(resultsFromRequest.results)\n      setResultsToggle(true)\n      setHomeToggle(false)\n      setAnimeToggle(false)\n      setaboutToggle(false)\n      setResult({})\n    }\n    getResults()\n  }\n\n  // ClickResult\n  const getResultInfo = ({id}) => {\n    const fetchUri = `https://api.jikan.moe/v3/anime/${id}`\n    const getResults = async () => {\n      const resultsFromRequest = await fetchResults(fetchUri)\n      setResult(resultsFromRequest)\n      setResultsToggle(false)\n      setaboutToggle(false)\n      setHomeToggle(false)\n      setAnimeToggle(true)\n    }\n    getResults()\n  }\n\n  const fetchResults = async (fetchUri) => {\n    const res = await fetch(fetchUri)\n    const data = await res.json()\n    return data\n  }\n\n  const toAbout = () => { \n    setaboutToggle(true)\n    setResultsToggle(false)\n    setHomeToggle(false)\n    setAnimeToggle(false)\n    setResult({})\n  }\n\n  const toHome = () => { \n    setResultsToggle(false)\n    setaboutToggle(false)\n    setHomeToggle(true)\n    setAnimeToggle(false)\n    setResult({})\n  }\n\n  return (\n    <div className = \"container\">\n      <Header onHome = {toHome} onSearch = {toSearch} onAbout = {toAbout}/>\n      {homeToggle && <Home />}\n      {aboutToggle && <About />}\n      {resultsToggle && <SearchResults results = {results} getDetail = {getResultInfo}/> }\n      {animeToggle && <ResultInfo result = {result}/> }\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}